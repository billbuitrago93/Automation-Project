/* 
 * Vendors
 *
 * An invoice is a bill of sale for goods or services provided by a vendor. This API provides methods to create, update, or delete invoice vendors.
 *
 * OpenAPI spec version: 3.0
 * 
 * Generated by: https://github.com/swagger-api/swagger-codegen.git
 */

using Newtonsoft.Json;
using System.ComponentModel.DataAnnotations;
using System.Runtime.Serialization;
using System.Text;

namespace SapConcurApiClient.VendorModels
{
    /// <summary>
    /// Vendor
    /// </summary>
    [DataContract]
    public partial class Vendor : IEquatable<Vendor>, IValidatableObject
    {
        /// <summary>
        /// Initializes a new instance of the <see cref="Vendor" /> class.
        /// </summary>
        /// <param name="accountNumber">The Buyer Account Number..</param>
        /// <param name="address1">The Vendor Address 1..</param>
        /// <param name="address2">The Vendor Address 2..</param>
        /// <param name="address3">The Vendor Address 3..</param>
        /// <param name="addressCode">The Address Code..</param>
        /// <param name="addressImportSyncID">This ID is originally generated by Invoice when an employee requests a new vendor. The Employee Request Vendor Extract provides this value to positively identify the vendor address record when reimporting vendor from the client&#39;s system of record for the Vendor Master List.  .</param>
        /// <param name="approved">Vendor Approval Status..</param>
        /// <param name="city">The Vendor City..</param>
        /// <param name="contactEmail">The Vendor Contact Email..</param>
        /// <param name="contactFirstName">The Vendor Contact First Name..</param>
        /// <param name="contactLastName">The Vendor Contact Last Name..</param>
        /// <param name="contactPhoneNumber">The Vendor Contact Phone Number..</param>
        /// <param name="country">The Vendor Country..</param>
        /// <param name="countryCode">The Vendor Country Code..</param>
        /// <param name="currencyCode">The Vendor Currency Code..</param>
        /// <param name="custom1">A value that can be applied to a custom field 1 that is part of the vendor form..</param>
        /// <param name="custom10">A value that can be applied to a custom field 10 that is part of the vendor form..</param>
        /// <param name="custom11">A value that can be applied to a custom field 11 that is part of the vendor form..</param>
        /// <param name="custom12">A value that can be applied to a custom field 12 that is part of the vendor form..</param>
        /// <param name="custom13">A value that can be applied to a custom field 13 that is part of the vendor form..</param>
        /// <param name="custom14">A value that can be applied to a custom field 14 that is part of the vendor form..</param>
        /// <param name="custom15">A value that can be applied to a custom field 15 that is part of the vendor form..</param>
        /// <param name="custom16">A value that can be applied to a custom field 16 that is part of the vendor form..</param>
        /// <param name="custom17">A value that can be applied to a custom field 17 that is part of the vendor form..</param>
        /// <param name="custom18">A value that can be applied to a custom field 18 that is part of the vendor form..</param>
        /// <param name="custom19">A value that can be applied to a custom field 19 that is part of the vendor form..</param>
        /// <param name="custom2">A value that can be applied to a custom field 2 that is part of the vendor form..</param>
        /// <param name="custom20">A value that can be applied to a custom field 20 that is part of the vendor form..</param>
        /// <param name="custom3">A value that can be applied to a custom field 3 that is part of the vendor form..</param>
        /// <param name="custom4">A value that can be applied to a custom field 4 that is part of the vendor form..</param>
        /// <param name="custom5">A value that can be applied to a custom field 5 that is part of the vendor form..</param>
        /// <param name="custom6">A value that can be applied to a custom field 6 that is part of the vendor form..</param>
        /// <param name="custom7">A value that can be applied to a custom field 7 that is part of the vendor form..</param>
        /// <param name="custom8">A value that can be applied to a custom field 8 that is part of the vendor form..</param>
        /// <param name="custom9">A value that can be applied to a custom field 9 that is part of the vendor form..</param>
        /// <param name="defaultEmployeeID">The Default Employee ID of the employee connected to the vendor..</param>
        /// <param name="defaultExpenseTypeName">The Default Expense Type tied to the vendor..</param>
        /// <param name="discountPercentage">The Discount Percentage..</param>
        /// <param name="discountTermsDays">The Vendor Discount Terms Days..</param>
        /// <param name="iD">The unique identifier of the resource..</param>
        /// <param name="isLineItemVatIncld">Line item Unit Price Contains VAT.</param>
        /// <param name="isVisibleForContentExtraction">Flag that indicates if the vendor will be available for OCR within Brainware .</param>
        /// <param name="paymentMethodType">Preferred Payment Type for Vendor..</param>
        /// <param name="paymentTerms">The Vendor Payment Terms..</param>
        /// <param name="postalCode">The Vendor Postal Code / Zip..</param>
        /// <param name="provincialTaxID">The Vendor Provincial Tax ID..</param>
        /// <param name="purchaseOrderContactEmail">The Purchase Order Contact Email..</param>
        /// <param name="purchaseOrderContactFirstName">The Purchase Order Contact First Name..</param>
        /// <param name="purchaseOrderContactLastName">The Purchase Order Contact Last Name..</param>
        /// <param name="purchaseOrderContactPhoneNumber">The Purchase Order Contact Phone Number..</param>
        /// <param name="shippingMethod">The Vendor Shipping Method..</param>
        /// <param name="shippingTerms">The Vendor Shipping Terms..</param>
        /// <param name="state">The Vendor State..</param>
        /// <param name="statusList">statusList.</param>
        /// <param name="taxID">The Vendor Tax ID..</param>
        /// <param name="taxType">The Vendor Tax Type..</param>
        /// <param name="uRI">The URI to the resource..</param>
        /// <param name="vendorBankList">vendorBankList.</param>
        /// <param name="vendorCode">The vendor code of the request..</param>
        /// <param name="vendorFormName">The vendor form name this vendor is associated with..</param>
        /// <param name="vendorGroupList">The list of vendor groups by name..</param>
        /// <param name="vendorName">The name of the vendor..</param>
        /// <param name="voucherNotes">Notes sent to Vendor along with authorization to charge Card Voucher..</param>
        public Vendor(string accountNumber = default(string), string address1 = default(string), string address2 = default(string), string address3 = default(string), string addressCode = default(string), string addressImportSyncID = default(string), string approved = default(string), string city = default(string), string contactEmail = default(string), string contactFirstName = default(string), string contactLastName = default(string), string contactPhoneNumber = default(string), string country = default(string), string countryCode = default(string), string currencyCode = default(string), string custom1 = default(string), string custom10 = default(string), string custom11 = default(string), string custom12 = default(string), string custom13 = default(string), string custom14 = default(string), string custom15 = default(string), string custom16 = default(string), string custom17 = default(string), string custom18 = default(string), string custom19 = default(string), string custom2 = default(string), string custom20 = default(string), string custom3 = default(string), string custom4 = default(string), string custom5 = default(string), string custom6 = default(string), string custom7 = default(string), string custom8 = default(string), string custom9 = default(string), string defaultEmployeeID = default(string), string defaultExpenseTypeName = default(string), string discountPercentage = default(string), string discountTermsDays = default(string), string iD = default(string), string isLineItemVatIncld = default(string), string isVisibleForContentExtraction = default(string), string paymentMethodType = default(string), string paymentTerms = default(string), string postalCode = default(string), string provincialTaxID = default(string), string purchaseOrderContactEmail = default(string), string purchaseOrderContactFirstName = default(string), string purchaseOrderContactLastName = default(string), string purchaseOrderContactPhoneNumber = default(string), string shippingMethod = default(string), string shippingTerms = default(string), string state = default(string), Status statusList = default(Status), string taxID = default(string), string taxType = default(string), string uRI = default(string), VendorBank vendorBankList = default(VendorBank), string vendorCode = default(string), string vendorFormName = default(string), List<string> vendorGroupList = default(List<string>), string vendorName = default(string), string voucherNotes = default(string))
        {
            this.AccountNumber = accountNumber;
            this.Address1 = address1;
            this.Address2 = address2;
            this.Address3 = address3;
            this.AddressCode = addressCode;
            this.AddressImportSyncID = addressImportSyncID;
            this.Approved = approved;
            this.City = city;
            this.ContactEmail = contactEmail;
            this.ContactFirstName = contactFirstName;
            this.ContactLastName = contactLastName;
            this.ContactPhoneNumber = contactPhoneNumber;
            this.Country = country;
            this.CountryCode = countryCode;
            this.CurrencyCode = currencyCode;
            this.Custom1 = custom1;
            this.Custom10 = custom10;
            this.Custom11 = custom11;
            this.Custom12 = custom12;
            this.Custom13 = custom13;
            this.Custom14 = custom14;
            this.Custom15 = custom15;
            this.Custom16 = custom16;
            this.Custom17 = custom17;
            this.Custom18 = custom18;
            this.Custom19 = custom19;
            this.Custom2 = custom2;
            this.Custom20 = custom20;
            this.Custom3 = custom3;
            this.Custom4 = custom4;
            this.Custom5 = custom5;
            this.Custom6 = custom6;
            this.Custom7 = custom7;
            this.Custom8 = custom8;
            this.Custom9 = custom9;
            this.DefaultEmployeeID = defaultEmployeeID;
            this.DefaultExpenseTypeName = defaultExpenseTypeName;
            this.DiscountPercentage = discountPercentage;
            this.DiscountTermsDays = discountTermsDays;
            this.ID = iD;
            this.IsLineItemVatIncld = isLineItemVatIncld;
            this.IsVisibleForContentExtraction = isVisibleForContentExtraction;
            this.PaymentMethodType = paymentMethodType;
            this.PaymentTerms = paymentTerms;
            this.PostalCode = postalCode;
            this.ProvincialTaxID = provincialTaxID;
            this.PurchaseOrderContactEmail = purchaseOrderContactEmail;
            this.PurchaseOrderContactFirstName = purchaseOrderContactFirstName;
            this.PurchaseOrderContactLastName = purchaseOrderContactLastName;
            this.PurchaseOrderContactPhoneNumber = purchaseOrderContactPhoneNumber;
            this.ShippingMethod = shippingMethod;
            this.ShippingTerms = shippingTerms;
            this.State = state;
            this.StatusList = statusList;
            this.TaxID = taxID;
            this.TaxType = taxType;
            this.URI = uRI;
            this.VendorBankList = vendorBankList;
            this.VendorCode = vendorCode;
            this.VendorFormName = vendorFormName;
            this.VendorGroupList = vendorGroupList;
            this.VendorName = vendorName;
            this.VoucherNotes = voucherNotes;
        }

        /// <summary>
        /// The Buyer Account Number.
        /// </summary>
        /// <value>The Buyer Account Number.</value>
        [DataMember(Name = "AccountNumber", EmitDefaultValue = false)]
        public string AccountNumber { get; set; }

        /// <summary>
        /// The Vendor Address 1.
        /// </summary>
        /// <value>The Vendor Address 1.</value>
        [DataMember(Name = "Address1", EmitDefaultValue = false)]
        public string Address1 { get; set; }

        /// <summary>
        /// The Vendor Address 2.
        /// </summary>
        /// <value>The Vendor Address 2.</value>
        [DataMember(Name = "Address2", EmitDefaultValue = false)]
        public string Address2 { get; set; }

        /// <summary>
        /// The Vendor Address 3.
        /// </summary>
        /// <value>The Vendor Address 3.</value>
        [DataMember(Name = "Address3", EmitDefaultValue = false)]
        public string Address3 { get; set; }

        /// <summary>
        /// The Address Code.
        /// </summary>
        /// <value>The Address Code.</value>
        [DataMember(Name = "AddressCode", EmitDefaultValue = false)]
        public string AddressCode { get; set; }

        /// <summary>
        /// This ID is originally generated by Invoice when an employee requests a new vendor. The Employee Request Vendor Extract provides this value to positively identify the vendor address record when reimporting vendor from the client&#39;s system of record for the Vendor Master List.  
        /// </summary>
        /// <value>This ID is originally generated by Invoice when an employee requests a new vendor. The Employee Request Vendor Extract provides this value to positively identify the vendor address record when reimporting vendor from the client&#39;s system of record for the Vendor Master List.  </value>
        [DataMember(Name = "AddressImportSyncID", EmitDefaultValue = false)]
        public string AddressImportSyncID { get; set; }

        /// <summary>
        /// Vendor Approval Status.
        /// </summary>
        /// <value>Vendor Approval Status.</value>
        [DataMember(Name = "Approved", EmitDefaultValue = false)]
        public string Approved { get; set; }

        /// <summary>
        /// The Vendor City.
        /// </summary>
        /// <value>The Vendor City.</value>
        [DataMember(Name = "City", EmitDefaultValue = false)]
        public string City { get; set; }

        /// <summary>
        /// The Vendor Contact Email.
        /// </summary>
        /// <value>The Vendor Contact Email.</value>
        [DataMember(Name = "ContactEmail", EmitDefaultValue = false)]
        public string ContactEmail { get; set; }

        /// <summary>
        /// The Vendor Contact First Name.
        /// </summary>
        /// <value>The Vendor Contact First Name.</value>
        [DataMember(Name = "ContactFirstName", EmitDefaultValue = false)]
        public string ContactFirstName { get; set; }

        /// <summary>
        /// The Vendor Contact Last Name.
        /// </summary>
        /// <value>The Vendor Contact Last Name.</value>
        [DataMember(Name = "ContactLastName", EmitDefaultValue = false)]
        public string ContactLastName { get; set; }

        /// <summary>
        /// The Vendor Contact Phone Number.
        /// </summary>
        /// <value>The Vendor Contact Phone Number.</value>
        [DataMember(Name = "ContactPhoneNumber", EmitDefaultValue = false)]
        public string ContactPhoneNumber { get; set; }

        /// <summary>
        /// The Vendor Country.
        /// </summary>
        /// <value>The Vendor Country.</value>
        [DataMember(Name = "Country", EmitDefaultValue = false)]
        public string Country { get; set; }

        /// <summary>
        /// The Vendor Country Code.
        /// </summary>
        /// <value>The Vendor Country Code.</value>
        [DataMember(Name = "CountryCode", EmitDefaultValue = false)]
        public string CountryCode { get; set; }

        /// <summary>
        /// The Vendor Currency Code.
        /// </summary>
        /// <value>The Vendor Currency Code.</value>
        [DataMember(Name = "CurrencyCode", EmitDefaultValue = false)]
        public string CurrencyCode { get; set; }

        /// <summary>
        /// A value that can be applied to a custom field 1 that is part of the vendor form.
        /// </summary>
        /// <value>A value that can be applied to a custom field 1 that is part of the vendor form.</value>
        [DataMember(Name = "Custom1", EmitDefaultValue = false)]
        public string Custom1 { get; set; }

        /// <summary>
        /// A value that can be applied to a custom field 10 that is part of the vendor form.
        /// </summary>
        /// <value>A value that can be applied to a custom field 10 that is part of the vendor form.</value>
        [DataMember(Name = "Custom10", EmitDefaultValue = false)]
        public string Custom10 { get; set; }

        /// <summary>
        /// A value that can be applied to a custom field 11 that is part of the vendor form.
        /// </summary>
        /// <value>A value that can be applied to a custom field 11 that is part of the vendor form.</value>
        [DataMember(Name = "Custom11", EmitDefaultValue = false)]
        public string Custom11 { get; set; }

        /// <summary>
        /// A value that can be applied to a custom field 12 that is part of the vendor form.
        /// </summary>
        /// <value>A value that can be applied to a custom field 12 that is part of the vendor form.</value>
        [DataMember(Name = "Custom12", EmitDefaultValue = false)]
        public string Custom12 { get; set; }

        /// <summary>
        /// A value that can be applied to a custom field 13 that is part of the vendor form.
        /// </summary>
        /// <value>A value that can be applied to a custom field 13 that is part of the vendor form.</value>
        [DataMember(Name = "Custom13", EmitDefaultValue = false)]
        public string Custom13 { get; set; }

        /// <summary>
        /// A value that can be applied to a custom field 14 that is part of the vendor form.
        /// </summary>
        /// <value>A value that can be applied to a custom field 14 that is part of the vendor form.</value>
        [DataMember(Name = "Custom14", EmitDefaultValue = false)]
        public string Custom14 { get; set; }

        /// <summary>
        /// A value that can be applied to a custom field 15 that is part of the vendor form.
        /// </summary>
        /// <value>A value that can be applied to a custom field 15 that is part of the vendor form.</value>
        [DataMember(Name = "Custom15", EmitDefaultValue = false)]
        public string Custom15 { get; set; }

        /// <summary>
        /// A value that can be applied to a custom field 16 that is part of the vendor form.
        /// </summary>
        /// <value>A value that can be applied to a custom field 16 that is part of the vendor form.</value>
        [DataMember(Name = "Custom16", EmitDefaultValue = false)]
        public string Custom16 { get; set; }

        /// <summary>
        /// A value that can be applied to a custom field 17 that is part of the vendor form.
        /// </summary>
        /// <value>A value that can be applied to a custom field 17 that is part of the vendor form.</value>
        [DataMember(Name = "Custom17", EmitDefaultValue = false)]
        public string Custom17 { get; set; }

        /// <summary>
        /// A value that can be applied to a custom field 18 that is part of the vendor form.
        /// </summary>
        /// <value>A value that can be applied to a custom field 18 that is part of the vendor form.</value>
        [DataMember(Name = "Custom18", EmitDefaultValue = false)]
        public string Custom18 { get; set; }

        /// <summary>
        /// A value that can be applied to a custom field 19 that is part of the vendor form.
        /// </summary>
        /// <value>A value that can be applied to a custom field 19 that is part of the vendor form.</value>
        [DataMember(Name = "Custom19", EmitDefaultValue = false)]
        public string Custom19 { get; set; }

        /// <summary>
        /// A value that can be applied to a custom field 2 that is part of the vendor form.
        /// </summary>
        /// <value>A value that can be applied to a custom field 2 that is part of the vendor form.</value>
        [DataMember(Name = "Custom2", EmitDefaultValue = false)]
        public string Custom2 { get; set; }

        /// <summary>
        /// A value that can be applied to a custom field 20 that is part of the vendor form.
        /// </summary>
        /// <value>A value that can be applied to a custom field 20 that is part of the vendor form.</value>
        [DataMember(Name = "Custom20", EmitDefaultValue = false)]
        public string Custom20 { get; set; }

        /// <summary>
        /// A value that can be applied to a custom field 3 that is part of the vendor form.
        /// </summary>
        /// <value>A value that can be applied to a custom field 3 that is part of the vendor form.</value>
        [DataMember(Name = "Custom3", EmitDefaultValue = false)]
        public string Custom3 { get; set; }

        /// <summary>
        /// A value that can be applied to a custom field 4 that is part of the vendor form.
        /// </summary>
        /// <value>A value that can be applied to a custom field 4 that is part of the vendor form.</value>
        [DataMember(Name = "Custom4", EmitDefaultValue = false)]
        public string Custom4 { get; set; }

        /// <summary>
        /// A value that can be applied to a custom field 5 that is part of the vendor form.
        /// </summary>
        /// <value>A value that can be applied to a custom field 5 that is part of the vendor form.</value>
        [DataMember(Name = "Custom5", EmitDefaultValue = false)]
        public string Custom5 { get; set; }

        /// <summary>
        /// A value that can be applied to a custom field 6 that is part of the vendor form.
        /// </summary>
        /// <value>A value that can be applied to a custom field 6 that is part of the vendor form.</value>
        [DataMember(Name = "Custom6", EmitDefaultValue = false)]
        public string Custom6 { get; set; }

        /// <summary>
        /// A value that can be applied to a custom field 7 that is part of the vendor form.
        /// </summary>
        /// <value>A value that can be applied to a custom field 7 that is part of the vendor form.</value>
        [DataMember(Name = "Custom7", EmitDefaultValue = false)]
        public string Custom7 { get; set; }

        /// <summary>
        /// A value that can be applied to a custom field 8 that is part of the vendor form.
        /// </summary>
        /// <value>A value that can be applied to a custom field 8 that is part of the vendor form.</value>
        [DataMember(Name = "Custom8", EmitDefaultValue = false)]
        public string Custom8 { get; set; }

        /// <summary>
        /// A value that can be applied to a custom field 9 that is part of the vendor form.
        /// </summary>
        /// <value>A value that can be applied to a custom field 9 that is part of the vendor form.</value>
        [DataMember(Name = "Custom9", EmitDefaultValue = false)]
        public string Custom9 { get; set; }

        /// <summary>
        /// The Default Employee ID of the employee connected to the vendor.
        /// </summary>
        /// <value>The Default Employee ID of the employee connected to the vendor.</value>
        [DataMember(Name = "DefaultEmployeeID", EmitDefaultValue = false)]
        public string DefaultEmployeeID { get; set; }

        /// <summary>
        /// The Default Expense Type tied to the vendor.
        /// </summary>
        /// <value>The Default Expense Type tied to the vendor.</value>
        [DataMember(Name = "DefaultExpenseTypeName", EmitDefaultValue = false)]
        public string DefaultExpenseTypeName { get; set; }

        /// <summary>
        /// The Discount Percentage.
        /// </summary>
        /// <value>The Discount Percentage.</value>
        [DataMember(Name = "DiscountPercentage", EmitDefaultValue = false)]
        public string DiscountPercentage { get; set; }

        /// <summary>
        /// The Vendor Discount Terms Days.
        /// </summary>
        /// <value>The Vendor Discount Terms Days.</value>
        [DataMember(Name = "DiscountTermsDays", EmitDefaultValue = false)]
        public string DiscountTermsDays { get; set; }

        /// <summary>
        /// The unique identifier of the resource.
        /// </summary>
        /// <value>The unique identifier of the resource.</value>
        [DataMember(Name = "ID", EmitDefaultValue = false)]
        public string ID { get; set; }

        /// <summary>
        /// Line item Unit Price Contains VAT
        /// </summary>
        /// <value>Line item Unit Price Contains VAT</value>
        [DataMember(Name = "IsLineItemVatIncld", EmitDefaultValue = false)]
        public string IsLineItemVatIncld { get; set; }

        /// <summary>
        /// Flag that indicates if the vendor will be available for OCR within Brainware 
        /// </summary>
        /// <value>Flag that indicates if the vendor will be available for OCR within Brainware </value>
        [DataMember(Name = "IsVisibleForContentExtraction", EmitDefaultValue = false)]
        public string IsVisibleForContentExtraction { get; set; }

        /// <summary>
        /// Preferred Payment Type for Vendor.
        /// </summary>
        /// <value>Preferred Payment Type for Vendor.</value>
        [DataMember(Name = "PaymentMethodType", EmitDefaultValue = false)]
        public string PaymentMethodType { get; set; }

        /// <summary>
        /// The Vendor Payment Terms.
        /// </summary>
        /// <value>The Vendor Payment Terms.</value>
        [DataMember(Name = "PaymentTerms", EmitDefaultValue = false)]
        public string PaymentTerms { get; set; }

        /// <summary>
        /// The Vendor Postal Code / Zip.
        /// </summary>
        /// <value>The Vendor Postal Code / Zip.</value>
        [DataMember(Name = "PostalCode", EmitDefaultValue = false)]
        public string PostalCode { get; set; }

        /// <summary>
        /// The Vendor Provincial Tax ID.
        /// </summary>
        /// <value>The Vendor Provincial Tax ID.</value>
        [DataMember(Name = "ProvincialTaxID", EmitDefaultValue = false)]
        public string ProvincialTaxID { get; set; }

        /// <summary>
        /// The Purchase Order Contact Email.
        /// </summary>
        /// <value>The Purchase Order Contact Email.</value>
        [DataMember(Name = "PurchaseOrderContactEmail", EmitDefaultValue = false)]
        public string PurchaseOrderContactEmail { get; set; }

        /// <summary>
        /// The Purchase Order Contact First Name.
        /// </summary>
        /// <value>The Purchase Order Contact First Name.</value>
        [DataMember(Name = "PurchaseOrderContactFirstName", EmitDefaultValue = false)]
        public string PurchaseOrderContactFirstName { get; set; }

        /// <summary>
        /// The Purchase Order Contact Last Name.
        /// </summary>
        /// <value>The Purchase Order Contact Last Name.</value>
        [DataMember(Name = "PurchaseOrderContactLastName", EmitDefaultValue = false)]
        public string PurchaseOrderContactLastName { get; set; }

        /// <summary>
        /// The Purchase Order Contact Phone Number.
        /// </summary>
        /// <value>The Purchase Order Contact Phone Number.</value>
        [DataMember(Name = "PurchaseOrderContactPhoneNumber", EmitDefaultValue = false)]
        public string PurchaseOrderContactPhoneNumber { get; set; }

        /// <summary>
        /// The Vendor Shipping Method.
        /// </summary>
        /// <value>The Vendor Shipping Method.</value>
        [DataMember(Name = "ShippingMethod", EmitDefaultValue = false)]
        public string ShippingMethod { get; set; }

        /// <summary>
        /// The Vendor Shipping Terms.
        /// </summary>
        /// <value>The Vendor Shipping Terms.</value>
        [DataMember(Name = "ShippingTerms", EmitDefaultValue = false)]
        public string ShippingTerms { get; set; }

        /// <summary>
        /// The Vendor State.
        /// </summary>
        /// <value>The Vendor State.</value>
        [DataMember(Name = "State", EmitDefaultValue = false)]
        public string State { get; set; }

        /// <summary>
        /// Gets or Sets StatusList
        /// </summary>
        [DataMember(Name = "StatusList", EmitDefaultValue = false)]
        public Status StatusList { get; set; }

        /// <summary>
        /// The Vendor Tax ID.
        /// </summary>
        /// <value>The Vendor Tax ID.</value>
        [DataMember(Name = "TaxID", EmitDefaultValue = false)]
        public string TaxID { get; set; }

        /// <summary>
        /// The Vendor Tax Type.
        /// </summary>
        /// <value>The Vendor Tax Type.</value>
        [DataMember(Name = "TaxType", EmitDefaultValue = false)]
        public string TaxType { get; set; }

        /// <summary>
        /// The URI to the resource.
        /// </summary>
        /// <value>The URI to the resource.</value>
        [DataMember(Name = "URI", EmitDefaultValue = false)]
        public string URI { get; set; }

        /// <summary>
        /// Gets or Sets VendorBankList
        /// </summary>
        [DataMember(Name = "VendorBankList", EmitDefaultValue = false)]
        public VendorBank VendorBankList { get; set; }

        /// <summary>
        /// The vendor code of the request.
        /// </summary>
        /// <value>The vendor code of the request.</value>
        [DataMember(Name = "VendorCode", EmitDefaultValue = false)]
        public string VendorCode { get; set; }

        /// <summary>
        /// The vendor form name this vendor is associated with.
        /// </summary>
        /// <value>The vendor form name this vendor is associated with.</value>
        [DataMember(Name = "VendorFormName", EmitDefaultValue = false)]
        public string VendorFormName { get; set; }

        /// <summary>
        /// The list of vendor groups by name.
        /// </summary>
        /// <value>The list of vendor groups by name.</value>
        [DataMember(Name = "VendorGroupList", EmitDefaultValue = false)]
        public List<string> VendorGroupList { get; set; }

        /// <summary>
        /// The name of the vendor.
        /// </summary>
        /// <value>The name of the vendor.</value>
        [DataMember(Name = "VendorName", EmitDefaultValue = false)]
        public string VendorName { get; set; }

        /// <summary>
        /// Notes sent to Vendor along with authorization to charge Card Voucher.
        /// </summary>
        /// <value>Notes sent to Vendor along with authorization to charge Card Voucher.</value>
        [DataMember(Name = "VoucherNotes", EmitDefaultValue = false)]
        public string VoucherNotes { get; set; }

        /// <summary>
        /// Returns the string presentation of the object
        /// </summary>
        /// <returns>String presentation of the object</returns>
        public override string ToString()
        {
            var sb = new StringBuilder();
            sb.Append("class Vendor {\n");
            sb.Append("  AccountNumber: ").Append(AccountNumber).Append("\n");
            sb.Append("  Address1: ").Append(Address1).Append("\n");
            sb.Append("  Address2: ").Append(Address2).Append("\n");
            sb.Append("  Address3: ").Append(Address3).Append("\n");
            sb.Append("  AddressCode: ").Append(AddressCode).Append("\n");
            sb.Append("  AddressImportSyncID: ").Append(AddressImportSyncID).Append("\n");
            sb.Append("  Approved: ").Append(Approved).Append("\n");
            sb.Append("  City: ").Append(City).Append("\n");
            sb.Append("  ContactEmail: ").Append(ContactEmail).Append("\n");
            sb.Append("  ContactFirstName: ").Append(ContactFirstName).Append("\n");
            sb.Append("  ContactLastName: ").Append(ContactLastName).Append("\n");
            sb.Append("  ContactPhoneNumber: ").Append(ContactPhoneNumber).Append("\n");
            sb.Append("  Country: ").Append(Country).Append("\n");
            sb.Append("  CountryCode: ").Append(CountryCode).Append("\n");
            sb.Append("  CurrencyCode: ").Append(CurrencyCode).Append("\n");
            sb.Append("  Custom1: ").Append(Custom1).Append("\n");
            sb.Append("  Custom10: ").Append(Custom10).Append("\n");
            sb.Append("  Custom11: ").Append(Custom11).Append("\n");
            sb.Append("  Custom12: ").Append(Custom12).Append("\n");
            sb.Append("  Custom13: ").Append(Custom13).Append("\n");
            sb.Append("  Custom14: ").Append(Custom14).Append("\n");
            sb.Append("  Custom15: ").Append(Custom15).Append("\n");
            sb.Append("  Custom16: ").Append(Custom16).Append("\n");
            sb.Append("  Custom17: ").Append(Custom17).Append("\n");
            sb.Append("  Custom18: ").Append(Custom18).Append("\n");
            sb.Append("  Custom19: ").Append(Custom19).Append("\n");
            sb.Append("  Custom2: ").Append(Custom2).Append("\n");
            sb.Append("  Custom20: ").Append(Custom20).Append("\n");
            sb.Append("  Custom3: ").Append(Custom3).Append("\n");
            sb.Append("  Custom4: ").Append(Custom4).Append("\n");
            sb.Append("  Custom5: ").Append(Custom5).Append("\n");
            sb.Append("  Custom6: ").Append(Custom6).Append("\n");
            sb.Append("  Custom7: ").Append(Custom7).Append("\n");
            sb.Append("  Custom8: ").Append(Custom8).Append("\n");
            sb.Append("  Custom9: ").Append(Custom9).Append("\n");
            sb.Append("  DefaultEmployeeID: ").Append(DefaultEmployeeID).Append("\n");
            sb.Append("  DefaultExpenseTypeName: ").Append(DefaultExpenseTypeName).Append("\n");
            sb.Append("  DiscountPercentage: ").Append(DiscountPercentage).Append("\n");
            sb.Append("  DiscountTermsDays: ").Append(DiscountTermsDays).Append("\n");
            sb.Append("  ID: ").Append(ID).Append("\n");
            sb.Append("  IsLineItemVatIncld: ").Append(IsLineItemVatIncld).Append("\n");
            sb.Append("  IsVisibleForContentExtraction: ").Append(IsVisibleForContentExtraction).Append("\n");
            sb.Append("  PaymentMethodType: ").Append(PaymentMethodType).Append("\n");
            sb.Append("  PaymentTerms: ").Append(PaymentTerms).Append("\n");
            sb.Append("  PostalCode: ").Append(PostalCode).Append("\n");
            sb.Append("  ProvincialTaxID: ").Append(ProvincialTaxID).Append("\n");
            sb.Append("  PurchaseOrderContactEmail: ").Append(PurchaseOrderContactEmail).Append("\n");
            sb.Append("  PurchaseOrderContactFirstName: ").Append(PurchaseOrderContactFirstName).Append("\n");
            sb.Append("  PurchaseOrderContactLastName: ").Append(PurchaseOrderContactLastName).Append("\n");
            sb.Append("  PurchaseOrderContactPhoneNumber: ").Append(PurchaseOrderContactPhoneNumber).Append("\n");
            sb.Append("  ShippingMethod: ").Append(ShippingMethod).Append("\n");
            sb.Append("  ShippingTerms: ").Append(ShippingTerms).Append("\n");
            sb.Append("  State: ").Append(State).Append("\n");
            sb.Append("  StatusList: ").Append(StatusList).Append("\n");
            sb.Append("  TaxID: ").Append(TaxID).Append("\n");
            sb.Append("  TaxType: ").Append(TaxType).Append("\n");
            sb.Append("  URI: ").Append(URI).Append("\n");
            sb.Append("  VendorBankList: ").Append(VendorBankList).Append("\n");
            sb.Append("  VendorCode: ").Append(VendorCode).Append("\n");
            sb.Append("  VendorFormName: ").Append(VendorFormName).Append("\n");
            sb.Append("  VendorGroupList: ").Append(VendorGroupList).Append("\n");
            sb.Append("  VendorName: ").Append(VendorName).Append("\n");
            sb.Append("  VoucherNotes: ").Append(VoucherNotes).Append("\n");
            sb.Append("}\n");
            return sb.ToString();
        }

        /// <summary>
        /// Returns the JSON string presentation of the object
        /// </summary>
        /// <returns>JSON string presentation of the object</returns>
        public virtual string ToJson()
        {
            return JsonConvert.SerializeObject(this, Formatting.Indented);
        }

        /// <summary>
        /// Returns true if objects are equal
        /// </summary>
        /// <param name="input">Object to be compared</param>
        /// <returns>Boolean</returns>
        public override bool Equals(object input)
        {
            return this.Equals(input as Vendor);
        }

        /// <summary>
        /// Returns true if Vendor instances are equal
        /// </summary>
        /// <param name="input">Instance of Vendor to be compared</param>
        /// <returns>Boolean</returns>
        public bool Equals(Vendor input)
        {
            if (input == null)
                return false;

            return
                (
                    this.AccountNumber == input.AccountNumber ||
                    (this.AccountNumber != null &&
                    this.AccountNumber.Equals(input.AccountNumber))
                ) &&
                (
                    this.Address1 == input.Address1 ||
                    (this.Address1 != null &&
                    this.Address1.Equals(input.Address1))
                ) &&
                (
                    this.Address2 == input.Address2 ||
                    (this.Address2 != null &&
                    this.Address2.Equals(input.Address2))
                ) &&
                (
                    this.Address3 == input.Address3 ||
                    (this.Address3 != null &&
                    this.Address3.Equals(input.Address3))
                ) &&
                (
                    this.AddressCode == input.AddressCode ||
                    (this.AddressCode != null &&
                    this.AddressCode.Equals(input.AddressCode))
                ) &&
                (
                    this.AddressImportSyncID == input.AddressImportSyncID ||
                    (this.AddressImportSyncID != null &&
                    this.AddressImportSyncID.Equals(input.AddressImportSyncID))
                ) &&
                (
                    this.Approved == input.Approved ||
                    (this.Approved != null &&
                    this.Approved.Equals(input.Approved))
                ) &&
                (
                    this.City == input.City ||
                    (this.City != null &&
                    this.City.Equals(input.City))
                ) &&
                (
                    this.ContactEmail == input.ContactEmail ||
                    (this.ContactEmail != null &&
                    this.ContactEmail.Equals(input.ContactEmail))
                ) &&
                (
                    this.ContactFirstName == input.ContactFirstName ||
                    (this.ContactFirstName != null &&
                    this.ContactFirstName.Equals(input.ContactFirstName))
                ) &&
                (
                    this.ContactLastName == input.ContactLastName ||
                    (this.ContactLastName != null &&
                    this.ContactLastName.Equals(input.ContactLastName))
                ) &&
                (
                    this.ContactPhoneNumber == input.ContactPhoneNumber ||
                    (this.ContactPhoneNumber != null &&
                    this.ContactPhoneNumber.Equals(input.ContactPhoneNumber))
                ) &&
                (
                    this.Country == input.Country ||
                    (this.Country != null &&
                    this.Country.Equals(input.Country))
                ) &&
                (
                    this.CountryCode == input.CountryCode ||
                    (this.CountryCode != null &&
                    this.CountryCode.Equals(input.CountryCode))
                ) &&
                (
                    this.CurrencyCode == input.CurrencyCode ||
                    (this.CurrencyCode != null &&
                    this.CurrencyCode.Equals(input.CurrencyCode))
                ) &&
                (
                    this.Custom1 == input.Custom1 ||
                    (this.Custom1 != null &&
                    this.Custom1.Equals(input.Custom1))
                ) &&
                (
                    this.Custom10 == input.Custom10 ||
                    (this.Custom10 != null &&
                    this.Custom10.Equals(input.Custom10))
                ) &&
                (
                    this.Custom11 == input.Custom11 ||
                    (this.Custom11 != null &&
                    this.Custom11.Equals(input.Custom11))
                ) &&
                (
                    this.Custom12 == input.Custom12 ||
                    (this.Custom12 != null &&
                    this.Custom12.Equals(input.Custom12))
                ) &&
                (
                    this.Custom13 == input.Custom13 ||
                    (this.Custom13 != null &&
                    this.Custom13.Equals(input.Custom13))
                ) &&
                (
                    this.Custom14 == input.Custom14 ||
                    (this.Custom14 != null &&
                    this.Custom14.Equals(input.Custom14))
                ) &&
                (
                    this.Custom15 == input.Custom15 ||
                    (this.Custom15 != null &&
                    this.Custom15.Equals(input.Custom15))
                ) &&
                (
                    this.Custom16 == input.Custom16 ||
                    (this.Custom16 != null &&
                    this.Custom16.Equals(input.Custom16))
                ) &&
                (
                    this.Custom17 == input.Custom17 ||
                    (this.Custom17 != null &&
                    this.Custom17.Equals(input.Custom17))
                ) &&
                (
                    this.Custom18 == input.Custom18 ||
                    (this.Custom18 != null &&
                    this.Custom18.Equals(input.Custom18))
                ) &&
                (
                    this.Custom19 == input.Custom19 ||
                    (this.Custom19 != null &&
                    this.Custom19.Equals(input.Custom19))
                ) &&
                (
                    this.Custom2 == input.Custom2 ||
                    (this.Custom2 != null &&
                    this.Custom2.Equals(input.Custom2))
                ) &&
                (
                    this.Custom20 == input.Custom20 ||
                    (this.Custom20 != null &&
                    this.Custom20.Equals(input.Custom20))
                ) &&
                (
                    this.Custom3 == input.Custom3 ||
                    (this.Custom3 != null &&
                    this.Custom3.Equals(input.Custom3))
                ) &&
                (
                    this.Custom4 == input.Custom4 ||
                    (this.Custom4 != null &&
                    this.Custom4.Equals(input.Custom4))
                ) &&
                (
                    this.Custom5 == input.Custom5 ||
                    (this.Custom5 != null &&
                    this.Custom5.Equals(input.Custom5))
                ) &&
                (
                    this.Custom6 == input.Custom6 ||
                    (this.Custom6 != null &&
                    this.Custom6.Equals(input.Custom6))
                ) &&
                (
                    this.Custom7 == input.Custom7 ||
                    (this.Custom7 != null &&
                    this.Custom7.Equals(input.Custom7))
                ) &&
                (
                    this.Custom8 == input.Custom8 ||
                    (this.Custom8 != null &&
                    this.Custom8.Equals(input.Custom8))
                ) &&
                (
                    this.Custom9 == input.Custom9 ||
                    (this.Custom9 != null &&
                    this.Custom9.Equals(input.Custom9))
                ) &&
                (
                    this.DefaultEmployeeID == input.DefaultEmployeeID ||
                    (this.DefaultEmployeeID != null &&
                    this.DefaultEmployeeID.Equals(input.DefaultEmployeeID))
                ) &&
                (
                    this.DefaultExpenseTypeName == input.DefaultExpenseTypeName ||
                    (this.DefaultExpenseTypeName != null &&
                    this.DefaultExpenseTypeName.Equals(input.DefaultExpenseTypeName))
                ) &&
                (
                    this.DiscountPercentage == input.DiscountPercentage ||
                    (this.DiscountPercentage != null &&
                    this.DiscountPercentage.Equals(input.DiscountPercentage))
                ) &&
                (
                    this.DiscountTermsDays == input.DiscountTermsDays ||
                    (this.DiscountTermsDays != null &&
                    this.DiscountTermsDays.Equals(input.DiscountTermsDays))
                ) &&
                (
                    this.ID == input.ID ||
                    (this.ID != null &&
                    this.ID.Equals(input.ID))
                ) &&
                (
                    this.IsLineItemVatIncld == input.IsLineItemVatIncld ||
                    (this.IsLineItemVatIncld != null &&
                    this.IsLineItemVatIncld.Equals(input.IsLineItemVatIncld))
                ) &&
                (
                    this.IsVisibleForContentExtraction == input.IsVisibleForContentExtraction ||
                    (this.IsVisibleForContentExtraction != null &&
                    this.IsVisibleForContentExtraction.Equals(input.IsVisibleForContentExtraction))
                ) &&
                (
                    this.PaymentMethodType == input.PaymentMethodType ||
                    (this.PaymentMethodType != null &&
                    this.PaymentMethodType.Equals(input.PaymentMethodType))
                ) &&
                (
                    this.PaymentTerms == input.PaymentTerms ||
                    (this.PaymentTerms != null &&
                    this.PaymentTerms.Equals(input.PaymentTerms))
                ) &&
                (
                    this.PostalCode == input.PostalCode ||
                    (this.PostalCode != null &&
                    this.PostalCode.Equals(input.PostalCode))
                ) &&
                (
                    this.ProvincialTaxID == input.ProvincialTaxID ||
                    (this.ProvincialTaxID != null &&
                    this.ProvincialTaxID.Equals(input.ProvincialTaxID))
                ) &&
                (
                    this.PurchaseOrderContactEmail == input.PurchaseOrderContactEmail ||
                    (this.PurchaseOrderContactEmail != null &&
                    this.PurchaseOrderContactEmail.Equals(input.PurchaseOrderContactEmail))
                ) &&
                (
                    this.PurchaseOrderContactFirstName == input.PurchaseOrderContactFirstName ||
                    (this.PurchaseOrderContactFirstName != null &&
                    this.PurchaseOrderContactFirstName.Equals(input.PurchaseOrderContactFirstName))
                ) &&
                (
                    this.PurchaseOrderContactLastName == input.PurchaseOrderContactLastName ||
                    (this.PurchaseOrderContactLastName != null &&
                    this.PurchaseOrderContactLastName.Equals(input.PurchaseOrderContactLastName))
                ) &&
                (
                    this.PurchaseOrderContactPhoneNumber == input.PurchaseOrderContactPhoneNumber ||
                    (this.PurchaseOrderContactPhoneNumber != null &&
                    this.PurchaseOrderContactPhoneNumber.Equals(input.PurchaseOrderContactPhoneNumber))
                ) &&
                (
                    this.ShippingMethod == input.ShippingMethod ||
                    (this.ShippingMethod != null &&
                    this.ShippingMethod.Equals(input.ShippingMethod))
                ) &&
                (
                    this.ShippingTerms == input.ShippingTerms ||
                    (this.ShippingTerms != null &&
                    this.ShippingTerms.Equals(input.ShippingTerms))
                ) &&
                (
                    this.State == input.State ||
                    (this.State != null &&
                    this.State.Equals(input.State))
                ) &&
                (
                    this.StatusList == input.StatusList ||
                    (this.StatusList != null &&
                    this.StatusList.Equals(input.StatusList))
                ) &&
                (
                    this.TaxID == input.TaxID ||
                    (this.TaxID != null &&
                    this.TaxID.Equals(input.TaxID))
                ) &&
                (
                    this.TaxType == input.TaxType ||
                    (this.TaxType != null &&
                    this.TaxType.Equals(input.TaxType))
                ) &&
                (
                    this.URI == input.URI ||
                    (this.URI != null &&
                    this.URI.Equals(input.URI))
                ) &&
                (
                    this.VendorBankList == input.VendorBankList ||
                    (this.VendorBankList != null &&
                    this.VendorBankList.Equals(input.VendorBankList))
                ) &&
                (
                    this.VendorCode == input.VendorCode ||
                    (this.VendorCode != null &&
                    this.VendorCode.Equals(input.VendorCode))
                ) &&
                (
                    this.VendorFormName == input.VendorFormName ||
                    (this.VendorFormName != null &&
                    this.VendorFormName.Equals(input.VendorFormName))
                ) &&
                (
                    this.VendorGroupList == input.VendorGroupList ||
                    this.VendorGroupList != null &&
                    this.VendorGroupList.SequenceEqual(input.VendorGroupList)
                ) &&
                (
                    this.VendorName == input.VendorName ||
                    (this.VendorName != null &&
                    this.VendorName.Equals(input.VendorName))
                ) &&
                (
                    this.VoucherNotes == input.VoucherNotes ||
                    (this.VoucherNotes != null &&
                    this.VoucherNotes.Equals(input.VoucherNotes))
                );
        }

        /// <summary>
        /// Gets the hash code
        /// </summary>
        /// <returns>Hash code</returns>
        public override int GetHashCode()
        {
            unchecked // Overflow is fine, just wrap
            {
                int hashCode = 41;
                if (this.AccountNumber != null)
                    hashCode = hashCode * 59 + this.AccountNumber.GetHashCode();
                if (this.Address1 != null)
                    hashCode = hashCode * 59 + this.Address1.GetHashCode();
                if (this.Address2 != null)
                    hashCode = hashCode * 59 + this.Address2.GetHashCode();
                if (this.Address3 != null)
                    hashCode = hashCode * 59 + this.Address3.GetHashCode();
                if (this.AddressCode != null)
                    hashCode = hashCode * 59 + this.AddressCode.GetHashCode();
                if (this.AddressImportSyncID != null)
                    hashCode = hashCode * 59 + this.AddressImportSyncID.GetHashCode();
                if (this.Approved != null)
                    hashCode = hashCode * 59 + this.Approved.GetHashCode();
                if (this.City != null)
                    hashCode = hashCode * 59 + this.City.GetHashCode();
                if (this.ContactEmail != null)
                    hashCode = hashCode * 59 + this.ContactEmail.GetHashCode();
                if (this.ContactFirstName != null)
                    hashCode = hashCode * 59 + this.ContactFirstName.GetHashCode();
                if (this.ContactLastName != null)
                    hashCode = hashCode * 59 + this.ContactLastName.GetHashCode();
                if (this.ContactPhoneNumber != null)
                    hashCode = hashCode * 59 + this.ContactPhoneNumber.GetHashCode();
                if (this.Country != null)
                    hashCode = hashCode * 59 + this.Country.GetHashCode();
                if (this.CountryCode != null)
                    hashCode = hashCode * 59 + this.CountryCode.GetHashCode();
                if (this.CurrencyCode != null)
                    hashCode = hashCode * 59 + this.CurrencyCode.GetHashCode();
                if (this.Custom1 != null)
                    hashCode = hashCode * 59 + this.Custom1.GetHashCode();
                if (this.Custom10 != null)
                    hashCode = hashCode * 59 + this.Custom10.GetHashCode();
                if (this.Custom11 != null)
                    hashCode = hashCode * 59 + this.Custom11.GetHashCode();
                if (this.Custom12 != null)
                    hashCode = hashCode * 59 + this.Custom12.GetHashCode();
                if (this.Custom13 != null)
                    hashCode = hashCode * 59 + this.Custom13.GetHashCode();
                if (this.Custom14 != null)
                    hashCode = hashCode * 59 + this.Custom14.GetHashCode();
                if (this.Custom15 != null)
                    hashCode = hashCode * 59 + this.Custom15.GetHashCode();
                if (this.Custom16 != null)
                    hashCode = hashCode * 59 + this.Custom16.GetHashCode();
                if (this.Custom17 != null)
                    hashCode = hashCode * 59 + this.Custom17.GetHashCode();
                if (this.Custom18 != null)
                    hashCode = hashCode * 59 + this.Custom18.GetHashCode();
                if (this.Custom19 != null)
                    hashCode = hashCode * 59 + this.Custom19.GetHashCode();
                if (this.Custom2 != null)
                    hashCode = hashCode * 59 + this.Custom2.GetHashCode();
                if (this.Custom20 != null)
                    hashCode = hashCode * 59 + this.Custom20.GetHashCode();
                if (this.Custom3 != null)
                    hashCode = hashCode * 59 + this.Custom3.GetHashCode();
                if (this.Custom4 != null)
                    hashCode = hashCode * 59 + this.Custom4.GetHashCode();
                if (this.Custom5 != null)
                    hashCode = hashCode * 59 + this.Custom5.GetHashCode();
                if (this.Custom6 != null)
                    hashCode = hashCode * 59 + this.Custom6.GetHashCode();
                if (this.Custom7 != null)
                    hashCode = hashCode * 59 + this.Custom7.GetHashCode();
                if (this.Custom8 != null)
                    hashCode = hashCode * 59 + this.Custom8.GetHashCode();
                if (this.Custom9 != null)
                    hashCode = hashCode * 59 + this.Custom9.GetHashCode();
                if (this.DefaultEmployeeID != null)
                    hashCode = hashCode * 59 + this.DefaultEmployeeID.GetHashCode();
                if (this.DefaultExpenseTypeName != null)
                    hashCode = hashCode * 59 + this.DefaultExpenseTypeName.GetHashCode();
                if (this.DiscountPercentage != null)
                    hashCode = hashCode * 59 + this.DiscountPercentage.GetHashCode();
                if (this.DiscountTermsDays != null)
                    hashCode = hashCode * 59 + this.DiscountTermsDays.GetHashCode();
                if (this.ID != null)
                    hashCode = hashCode * 59 + this.ID.GetHashCode();
                if (this.IsLineItemVatIncld != null)
                    hashCode = hashCode * 59 + this.IsLineItemVatIncld.GetHashCode();
                if (this.IsVisibleForContentExtraction != null)
                    hashCode = hashCode * 59 + this.IsVisibleForContentExtraction.GetHashCode();
                if (this.PaymentMethodType != null)
                    hashCode = hashCode * 59 + this.PaymentMethodType.GetHashCode();
                if (this.PaymentTerms != null)
                    hashCode = hashCode * 59 + this.PaymentTerms.GetHashCode();
                if (this.PostalCode != null)
                    hashCode = hashCode * 59 + this.PostalCode.GetHashCode();
                if (this.ProvincialTaxID != null)
                    hashCode = hashCode * 59 + this.ProvincialTaxID.GetHashCode();
                if (this.PurchaseOrderContactEmail != null)
                    hashCode = hashCode * 59 + this.PurchaseOrderContactEmail.GetHashCode();
                if (this.PurchaseOrderContactFirstName != null)
                    hashCode = hashCode * 59 + this.PurchaseOrderContactFirstName.GetHashCode();
                if (this.PurchaseOrderContactLastName != null)
                    hashCode = hashCode * 59 + this.PurchaseOrderContactLastName.GetHashCode();
                if (this.PurchaseOrderContactPhoneNumber != null)
                    hashCode = hashCode * 59 + this.PurchaseOrderContactPhoneNumber.GetHashCode();
                if (this.ShippingMethod != null)
                    hashCode = hashCode * 59 + this.ShippingMethod.GetHashCode();
                if (this.ShippingTerms != null)
                    hashCode = hashCode * 59 + this.ShippingTerms.GetHashCode();
                if (this.State != null)
                    hashCode = hashCode * 59 + this.State.GetHashCode();
                if (this.StatusList != null)
                    hashCode = hashCode * 59 + this.StatusList.GetHashCode();
                if (this.TaxID != null)
                    hashCode = hashCode * 59 + this.TaxID.GetHashCode();
                if (this.TaxType != null)
                    hashCode = hashCode * 59 + this.TaxType.GetHashCode();
                if (this.URI != null)
                    hashCode = hashCode * 59 + this.URI.GetHashCode();
                if (this.VendorBankList != null)
                    hashCode = hashCode * 59 + this.VendorBankList.GetHashCode();
                if (this.VendorCode != null)
                    hashCode = hashCode * 59 + this.VendorCode.GetHashCode();
                if (this.VendorFormName != null)
                    hashCode = hashCode * 59 + this.VendorFormName.GetHashCode();
                if (this.VendorGroupList != null)
                    hashCode = hashCode * 59 + this.VendorGroupList.GetHashCode();
                if (this.VendorName != null)
                    hashCode = hashCode * 59 + this.VendorName.GetHashCode();
                if (this.VoucherNotes != null)
                    hashCode = hashCode * 59 + this.VoucherNotes.GetHashCode();
                return hashCode;
            }
        }

        /// <summary>
        /// To validate all properties of the instance
        /// </summary>
        /// <param name="validationContext">Validation context</param>
        /// <returns>Validation Result</returns>
        IEnumerable<System.ComponentModel.DataAnnotations.ValidationResult> IValidatableObject.Validate(ValidationContext validationContext)
        {
            yield break;
        }
    }

}
