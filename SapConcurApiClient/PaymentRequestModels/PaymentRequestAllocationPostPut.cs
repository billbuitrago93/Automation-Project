/* 
 * Payment Request
 *
 * A payment request is a request for payment (partial or full) of an invoice. This API provides methods to create or update a payment request, or view a payment request by ID.
 *
 * OpenAPI spec version: 3.0
 * 
 * Generated by: https://github.com/swagger-api/swagger-codegen.git
 */

using Newtonsoft.Json;
using System.ComponentModel.DataAnnotations;
using System.Runtime.Serialization;
using System.Text;

namespace SapConcurApiClient.PaymentRequestModels
{
    /// <summary>
    /// PaymentRequestAllocationPostPut
    /// </summary>
    [DataContract]
    public partial class PaymentRequestAllocationPostPut : IEquatable<PaymentRequestAllocationPostPut>, IValidatableObject
    {
        /// <summary>
        /// Initializes a new instance of the <see cref="PaymentRequestAllocationPostPut" /> class.
        /// </summary>
        /// <param name="custom01">The details from the Custom fields. These may not have data, depending on configuration..</param>
        /// <param name="custom02">The details from the Custom fields. These may not have data, depending on configuration..</param>
        /// <param name="custom03">The details from the Custom fields. These may not have data, depending on configuration..</param>
        /// <param name="custom04">The details from the Custom fields. These may not have data, depending on configuration..</param>
        /// <param name="custom05">The details from the Custom fields. These may not have data, depending on configuration..</param>
        /// <param name="custom06">The details from the Custom fields. These may not have data, depending on configuration..</param>
        /// <param name="custom07">The details from the Custom fields. These may not have data, depending on configuration..</param>
        /// <param name="custom08">A value that can be applied to a custom field 8 that is part of the allocation form..</param>
        /// <param name="custom09">A value that can be applied to a custom field 9 that is part of the allocation form..</param>
        /// <param name="custom10">A value that can be applied to a custom field 10 that is part of the allocation form..</param>
        /// <param name="custom11">The details from the Custom fields. These may not have data, depending on configuration..</param>
        /// <param name="custom12">The details from the Custom fields. These may not have data, depending on configuration..</param>
        /// <param name="custom13">The details from the Custom fields. These may not have data, depending on configuration..</param>
        /// <param name="custom14">The details from the Custom fields. These may not have data, depending on configuration..</param>
        /// <param name="custom15">The details from the Custom fields. These may not have data, depending on configuration..</param>
        /// <param name="custom16">The details from the Custom fields. These may not have data, depending on configuration..</param>
        /// <param name="custom17">The details from the Custom fields. These may not have data, depending on configuration..</param>
        /// <param name="custom18">The details from the Custom fields. These may not have data, depending on configuration..</param>
        /// <param name="custom19">The details from the Custom fields. These may not have data, depending on configuration..</param>
        /// <param name="custom20">The details from the Custom fields. These may not have data, depending on configuration..</param>
        /// <param name="percentage">The percentage of the Request Line Item that the individual allocation record. All Allocations associated to a given Line Item should add up to 100..</param>
        public PaymentRequestAllocationPostPut(string custom01 = default(string), string custom02 = default(string), string custom03 = default(string), string custom04 = default(string), string custom05 = default(string), string custom06 = default(string), string custom07 = default(string), string custom08 = default(string), string custom09 = default(string), string custom10 = default(string), string custom11 = default(string), string custom12 = default(string), string custom13 = default(string), string custom14 = default(string), string custom15 = default(string), string custom16 = default(string), string custom17 = default(string), string custom18 = default(string), string custom19 = default(string), string custom20 = default(string), string percentage = default(string))
        {
            this.Custom01 = custom01;
            this.Custom02 = custom02;
            this.Custom03 = custom03;
            this.Custom04 = custom04;
            this.Custom05 = custom05;
            this.Custom06 = custom06;
            this.Custom07 = custom07;
            this.Custom08 = custom08;
            this.Custom09 = custom09;
            this.Custom10 = custom10;
            this.Custom11 = custom11;
            this.Custom12 = custom12;
            this.Custom13 = custom13;
            this.Custom14 = custom14;
            this.Custom15 = custom15;
            this.Custom16 = custom16;
            this.Custom17 = custom17;
            this.Custom18 = custom18;
            this.Custom19 = custom19;
            this.Custom20 = custom20;
            this.Percentage = percentage;
        }

        /// <summary>
        /// The details from the Custom fields. These may not have data, depending on configuration.
        /// </summary>
        /// <value>The details from the Custom fields. These may not have data, depending on configuration.</value>
        [DataMember(Name = "Custom01", EmitDefaultValue = false)]
        public string Custom01 { get; set; }

        /// <summary>
        /// The details from the Custom fields. These may not have data, depending on configuration.
        /// </summary>
        /// <value>The details from the Custom fields. These may not have data, depending on configuration.</value>
        [DataMember(Name = "Custom02", EmitDefaultValue = false)]
        public string Custom02 { get; set; }

        /// <summary>
        /// The details from the Custom fields. These may not have data, depending on configuration.
        /// </summary>
        /// <value>The details from the Custom fields. These may not have data, depending on configuration.</value>
        [DataMember(Name = "Custom03", EmitDefaultValue = false)]
        public string Custom03 { get; set; }

        /// <summary>
        /// The details from the Custom fields. These may not have data, depending on configuration.
        /// </summary>
        /// <value>The details from the Custom fields. These may not have data, depending on configuration.</value>
        [DataMember(Name = "Custom04", EmitDefaultValue = false)]
        public string Custom04 { get; set; }

        /// <summary>
        /// The details from the Custom fields. These may not have data, depending on configuration.
        /// </summary>
        /// <value>The details from the Custom fields. These may not have data, depending on configuration.</value>
        [DataMember(Name = "Custom05", EmitDefaultValue = false)]
        public string Custom05 { get; set; }

        /// <summary>
        /// The details from the Custom fields. These may not have data, depending on configuration.
        /// </summary>
        /// <value>The details from the Custom fields. These may not have data, depending on configuration.</value>
        [DataMember(Name = "Custom06", EmitDefaultValue = false)]
        public string Custom06 { get; set; }

        /// <summary>
        /// The details from the Custom fields. These may not have data, depending on configuration.
        /// </summary>
        /// <value>The details from the Custom fields. These may not have data, depending on configuration.</value>
        [DataMember(Name = "Custom07", EmitDefaultValue = false)]
        public string Custom07 { get; set; }

        /// <summary>
        /// A value that can be applied to a custom field 8 that is part of the allocation form.
        /// </summary>
        /// <value>A value that can be applied to a custom field 8 that is part of the allocation form.</value>
        [DataMember(Name = "Custom08", EmitDefaultValue = false)]
        public string Custom08 { get; set; }

        /// <summary>
        /// A value that can be applied to a custom field 9 that is part of the allocation form.
        /// </summary>
        /// <value>A value that can be applied to a custom field 9 that is part of the allocation form.</value>
        [DataMember(Name = "Custom09", EmitDefaultValue = false)]
        public string Custom09 { get; set; }

        /// <summary>
        /// A value that can be applied to a custom field 10 that is part of the allocation form.
        /// </summary>
        /// <value>A value that can be applied to a custom field 10 that is part of the allocation form.</value>
        [DataMember(Name = "Custom10", EmitDefaultValue = false)]
        public string Custom10 { get; set; }

        /// <summary>
        /// The details from the Custom fields. These may not have data, depending on configuration.
        /// </summary>
        /// <value>The details from the Custom fields. These may not have data, depending on configuration.</value>
        [DataMember(Name = "Custom11", EmitDefaultValue = false)]
        public string Custom11 { get; set; }

        /// <summary>
        /// The details from the Custom fields. These may not have data, depending on configuration.
        /// </summary>
        /// <value>The details from the Custom fields. These may not have data, depending on configuration.</value>
        [DataMember(Name = "Custom12", EmitDefaultValue = false)]
        public string Custom12 { get; set; }

        /// <summary>
        /// The details from the Custom fields. These may not have data, depending on configuration.
        /// </summary>
        /// <value>The details from the Custom fields. These may not have data, depending on configuration.</value>
        [DataMember(Name = "Custom13", EmitDefaultValue = false)]
        public string Custom13 { get; set; }

        /// <summary>
        /// The details from the Custom fields. These may not have data, depending on configuration.
        /// </summary>
        /// <value>The details from the Custom fields. These may not have data, depending on configuration.</value>
        [DataMember(Name = "Custom14", EmitDefaultValue = false)]
        public string Custom14 { get; set; }

        /// <summary>
        /// The details from the Custom fields. These may not have data, depending on configuration.
        /// </summary>
        /// <value>The details from the Custom fields. These may not have data, depending on configuration.</value>
        [DataMember(Name = "Custom15", EmitDefaultValue = false)]
        public string Custom15 { get; set; }

        /// <summary>
        /// The details from the Custom fields. These may not have data, depending on configuration.
        /// </summary>
        /// <value>The details from the Custom fields. These may not have data, depending on configuration.</value>
        [DataMember(Name = "Custom16", EmitDefaultValue = false)]
        public string Custom16 { get; set; }

        /// <summary>
        /// The details from the Custom fields. These may not have data, depending on configuration.
        /// </summary>
        /// <value>The details from the Custom fields. These may not have data, depending on configuration.</value>
        [DataMember(Name = "Custom17", EmitDefaultValue = false)]
        public string Custom17 { get; set; }

        /// <summary>
        /// The details from the Custom fields. These may not have data, depending on configuration.
        /// </summary>
        /// <value>The details from the Custom fields. These may not have data, depending on configuration.</value>
        [DataMember(Name = "Custom18", EmitDefaultValue = false)]
        public string Custom18 { get; set; }

        /// <summary>
        /// The details from the Custom fields. These may not have data, depending on configuration.
        /// </summary>
        /// <value>The details from the Custom fields. These may not have data, depending on configuration.</value>
        [DataMember(Name = "Custom19", EmitDefaultValue = false)]
        public string Custom19 { get; set; }

        /// <summary>
        /// The details from the Custom fields. These may not have data, depending on configuration.
        /// </summary>
        /// <value>The details from the Custom fields. These may not have data, depending on configuration.</value>
        [DataMember(Name = "Custom20", EmitDefaultValue = false)]
        public string Custom20 { get; set; }

        /// <summary>
        /// The percentage of the Request Line Item that the individual allocation record. All Allocations associated to a given Line Item should add up to 100.
        /// </summary>
        /// <value>The percentage of the Request Line Item that the individual allocation record. All Allocations associated to a given Line Item should add up to 100.</value>
        [DataMember(Name = "Percentage", EmitDefaultValue = false)]
        public string Percentage { get; set; }

        /// <summary>
        /// Returns the string presentation of the object
        /// </summary>
        /// <returns>String presentation of the object</returns>
        public override string ToString()
        {
            var sb = new StringBuilder();
            sb.Append("class PaymentRequestAllocationPostPut {\n");
            sb.Append("  Custom01: ").Append(Custom01).Append("\n");
            sb.Append("  Custom02: ").Append(Custom02).Append("\n");
            sb.Append("  Custom03: ").Append(Custom03).Append("\n");
            sb.Append("  Custom04: ").Append(Custom04).Append("\n");
            sb.Append("  Custom05: ").Append(Custom05).Append("\n");
            sb.Append("  Custom06: ").Append(Custom06).Append("\n");
            sb.Append("  Custom07: ").Append(Custom07).Append("\n");
            sb.Append("  Custom08: ").Append(Custom08).Append("\n");
            sb.Append("  Custom09: ").Append(Custom09).Append("\n");
            sb.Append("  Custom10: ").Append(Custom10).Append("\n");
            sb.Append("  Custom11: ").Append(Custom11).Append("\n");
            sb.Append("  Custom12: ").Append(Custom12).Append("\n");
            sb.Append("  Custom13: ").Append(Custom13).Append("\n");
            sb.Append("  Custom14: ").Append(Custom14).Append("\n");
            sb.Append("  Custom15: ").Append(Custom15).Append("\n");
            sb.Append("  Custom16: ").Append(Custom16).Append("\n");
            sb.Append("  Custom17: ").Append(Custom17).Append("\n");
            sb.Append("  Custom18: ").Append(Custom18).Append("\n");
            sb.Append("  Custom19: ").Append(Custom19).Append("\n");
            sb.Append("  Custom20: ").Append(Custom20).Append("\n");
            sb.Append("  Percentage: ").Append(Percentage).Append("\n");
            sb.Append("}\n");
            return sb.ToString();
        }

        /// <summary>
        /// Returns the JSON string presentation of the object
        /// </summary>
        /// <returns>JSON string presentation of the object</returns>
        public virtual string ToJson()
        {
            return JsonConvert.SerializeObject(this, Formatting.Indented);
        }

        /// <summary>
        /// Returns true if objects are equal
        /// </summary>
        /// <param name="input">Object to be compared</param>
        /// <returns>Boolean</returns>
        public override bool Equals(object input)
        {
            return this.Equals(input as PaymentRequestAllocationPostPut);
        }

        /// <summary>
        /// Returns true if PaymentRequestAllocationPostPut instances are equal
        /// </summary>
        /// <param name="input">Instance of PaymentRequestAllocationPostPut to be compared</param>
        /// <returns>Boolean</returns>
        public bool Equals(PaymentRequestAllocationPostPut input)
        {
            if (input == null)
                return false;

            return
                (
                    this.Custom01 == input.Custom01 ||
                    (this.Custom01 != null &&
                    this.Custom01.Equals(input.Custom01))
                ) &&
                (
                    this.Custom02 == input.Custom02 ||
                    (this.Custom02 != null &&
                    this.Custom02.Equals(input.Custom02))
                ) &&
                (
                    this.Custom03 == input.Custom03 ||
                    (this.Custom03 != null &&
                    this.Custom03.Equals(input.Custom03))
                ) &&
                (
                    this.Custom04 == input.Custom04 ||
                    (this.Custom04 != null &&
                    this.Custom04.Equals(input.Custom04))
                ) &&
                (
                    this.Custom05 == input.Custom05 ||
                    (this.Custom05 != null &&
                    this.Custom05.Equals(input.Custom05))
                ) &&
                (
                    this.Custom06 == input.Custom06 ||
                    (this.Custom06 != null &&
                    this.Custom06.Equals(input.Custom06))
                ) &&
                (
                    this.Custom07 == input.Custom07 ||
                    (this.Custom07 != null &&
                    this.Custom07.Equals(input.Custom07))
                ) &&
                (
                    this.Custom08 == input.Custom08 ||
                    (this.Custom08 != null &&
                    this.Custom08.Equals(input.Custom08))
                ) &&
                (
                    this.Custom09 == input.Custom09 ||
                    (this.Custom09 != null &&
                    this.Custom09.Equals(input.Custom09))
                ) &&
                (
                    this.Custom10 == input.Custom10 ||
                    (this.Custom10 != null &&
                    this.Custom10.Equals(input.Custom10))
                ) &&
                (
                    this.Custom11 == input.Custom11 ||
                    (this.Custom11 != null &&
                    this.Custom11.Equals(input.Custom11))
                ) &&
                (
                    this.Custom12 == input.Custom12 ||
                    (this.Custom12 != null &&
                    this.Custom12.Equals(input.Custom12))
                ) &&
                (
                    this.Custom13 == input.Custom13 ||
                    (this.Custom13 != null &&
                    this.Custom13.Equals(input.Custom13))
                ) &&
                (
                    this.Custom14 == input.Custom14 ||
                    (this.Custom14 != null &&
                    this.Custom14.Equals(input.Custom14))
                ) &&
                (
                    this.Custom15 == input.Custom15 ||
                    (this.Custom15 != null &&
                    this.Custom15.Equals(input.Custom15))
                ) &&
                (
                    this.Custom16 == input.Custom16 ||
                    (this.Custom16 != null &&
                    this.Custom16.Equals(input.Custom16))
                ) &&
                (
                    this.Custom17 == input.Custom17 ||
                    (this.Custom17 != null &&
                    this.Custom17.Equals(input.Custom17))
                ) &&
                (
                    this.Custom18 == input.Custom18 ||
                    (this.Custom18 != null &&
                    this.Custom18.Equals(input.Custom18))
                ) &&
                (
                    this.Custom19 == input.Custom19 ||
                    (this.Custom19 != null &&
                    this.Custom19.Equals(input.Custom19))
                ) &&
                (
                    this.Custom20 == input.Custom20 ||
                    (this.Custom20 != null &&
                    this.Custom20.Equals(input.Custom20))
                ) &&
                (
                    this.Percentage == input.Percentage ||
                    (this.Percentage != null &&
                    this.Percentage.Equals(input.Percentage))
                );
        }

        /// <summary>
        /// Gets the hash code
        /// </summary>
        /// <returns>Hash code</returns>
        public override int GetHashCode()
        {
            unchecked // Overflow is fine, just wrap
            {
                int hashCode = 41;
                if (this.Custom01 != null)
                    hashCode = hashCode * 59 + this.Custom01.GetHashCode();
                if (this.Custom02 != null)
                    hashCode = hashCode * 59 + this.Custom02.GetHashCode();
                if (this.Custom03 != null)
                    hashCode = hashCode * 59 + this.Custom03.GetHashCode();
                if (this.Custom04 != null)
                    hashCode = hashCode * 59 + this.Custom04.GetHashCode();
                if (this.Custom05 != null)
                    hashCode = hashCode * 59 + this.Custom05.GetHashCode();
                if (this.Custom06 != null)
                    hashCode = hashCode * 59 + this.Custom06.GetHashCode();
                if (this.Custom07 != null)
                    hashCode = hashCode * 59 + this.Custom07.GetHashCode();
                if (this.Custom08 != null)
                    hashCode = hashCode * 59 + this.Custom08.GetHashCode();
                if (this.Custom09 != null)
                    hashCode = hashCode * 59 + this.Custom09.GetHashCode();
                if (this.Custom10 != null)
                    hashCode = hashCode * 59 + this.Custom10.GetHashCode();
                if (this.Custom11 != null)
                    hashCode = hashCode * 59 + this.Custom11.GetHashCode();
                if (this.Custom12 != null)
                    hashCode = hashCode * 59 + this.Custom12.GetHashCode();
                if (this.Custom13 != null)
                    hashCode = hashCode * 59 + this.Custom13.GetHashCode();
                if (this.Custom14 != null)
                    hashCode = hashCode * 59 + this.Custom14.GetHashCode();
                if (this.Custom15 != null)
                    hashCode = hashCode * 59 + this.Custom15.GetHashCode();
                if (this.Custom16 != null)
                    hashCode = hashCode * 59 + this.Custom16.GetHashCode();
                if (this.Custom17 != null)
                    hashCode = hashCode * 59 + this.Custom17.GetHashCode();
                if (this.Custom18 != null)
                    hashCode = hashCode * 59 + this.Custom18.GetHashCode();
                if (this.Custom19 != null)
                    hashCode = hashCode * 59 + this.Custom19.GetHashCode();
                if (this.Custom20 != null)
                    hashCode = hashCode * 59 + this.Custom20.GetHashCode();
                if (this.Percentage != null)
                    hashCode = hashCode * 59 + this.Percentage.GetHashCode();
                return hashCode;
            }
        }

        /// <summary>
        /// To validate all properties of the instance
        /// </summary>
        /// <param name="validationContext">Validation context</param>
        /// <returns>Validation Result</returns>
        IEnumerable<System.ComponentModel.DataAnnotations.ValidationResult> IValidatableObject.Validate(ValidationContext validationContext)
        {
            yield break;
        }
    }

}
